#pragma checksum "D:\Akash D2D code\Akash\D2D\D2D.WebApp\Views\Order\FetchOrderDetails.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "670f5ef04a386348715c0fedf74bea3fb013d97a"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Order_FetchOrderDetails), @"mvc.1.0.view", @"/Views/Order/FetchOrderDetails.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"670f5ef04a386348715c0fedf74bea3fb013d97a", @"/Views/Order/FetchOrderDetails.cshtml")]
    public class Views_Order_FetchOrderDetails : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<D2D.WebApp.ViewModel.OrderListVM>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/js/jquery.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/js/toastr.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "D:\Akash D2D code\Akash\D2D\D2D.WebApp\Views\Order\FetchOrderDetails.cshtml"
  
    Layout = "~/Pages/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<style>
    hr.dashed {
        border-top: 3px dashed #bbb;
    }

    #importantId {
        background-color: red;
    }
</style>

<div class=""ms-content-wrapper"">
    <div class=""row"">
        <div class=""col-md-12"">
            <nav aria-label=""breadcrumb"">
                <ol class=""breadcrumb pl-0"">
                    <li class=""breadcrumb-item""><a href=""#""><i class=""material-icons"">home</i> Home</a></li>
                    <li class=""breadcrumb-item""><a href=""#"">Menu</a></li>
                    <li class=""breadcrumb-item active"" aria-current=""page"">Alacarte Orders</li>
                </ol>
            </nav>
            <div class=""ms-panel"">
                <div class=""ms-panel-header"">
                    <h6> ALACARTE ORDER LIST</h6>
                </div>
                <div class=""ms-panel-body"">
                    <div class=""table-responsive"">
                        <table id=""myTable"" class=""table table-hover thead-primary"" data-toolbar=""#toolbar"" data-toggle=""");
            WriteLiteral(@"table"" data-maintain-meta-data=""true"">
                            <thead>
                                <tr>
                                    <th scope=""col"">Order Id</th>
                                    <th scope=""col"">Customer Name</th>
                                    <th scope=""col"">Number</th>
                                    <th scope=""col"">Amount</th>
                                    <th scope=""col"">Payment Mode</th>
                                    <th scope=""col"">Order Status</th>
                                    <th scope=""col"">Date</th>
                                   
                                    <th scope=""col"">Action</th>

                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>

<!-- View table Modal -->
<div c");
            WriteLiteral(@"lass=""modal fade"" id=""viewmodal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""notes-modal"">
    <div class=""modal-dialog modal-dialog-centered"" style=""max-width: 90%;"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header bg-secondary"">
                <h5 class=""modal-title has-icon text-white"" id=""NoteModal"">View Items</h5>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <span aria-hidden=""true"">&times;</span>
                </button>
            </div>
            <div class=""ms-panel-body"">
                <div class=""table-responsive"">
                    <table class=""myTableview table table-hover thead-primary"">
                        <thead>
                            <tr style=""width: 10px;"">
                                <th scope=""col"" style=""width:10px""> Item Name</th>
                                <th scope=""col""style=""width:10px"">Quantity</th>
                              ");
            WriteLiteral(@"  <th scope=""col"" style=""width:10px"">Selections</th>
                                <th scope=""col"" style=""width:10px"">AddOns</th>
                                <th scope=""col"" style=""width:10px"">Address</th>
                                <th scope=""col""style=""width:10px"">Sector Name</th>

                            </tr>
                        </thead>
                        <tbody>
                        
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "670f5ef04a386348715c0fedf74bea3fb013d97a7465", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "670f5ef04a386348715c0fedf74bea3fb013d97a8504", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n<script>\r\n    $(\"#view\").click(function () {\r\n        debugger;\r\n        $(\'#viewmodal\').modal(\'show\');\r\n    })\r\n\r\n    $(document).ready(function () {\r\n        var APIString = \'");
#nullable restore
#line 102 "D:\Akash D2D code\Akash\D2D\D2D.WebApp\Views\Order\FetchOrderDetails.cshtml"
                    Write(Model.Connectionstringdayorderhistory);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"';
        $.post(APIString, function (orderList,status) {
            console.log(""orderList"", orderList.list);
            var listArray = orderList.list;
            $(""#myTableview tbody"").html("" "");
            if (listArray) {
                listArray.forEach(function (dt) {
                    var orderItems = dt.orderDetails;
                    var itemName = """";
                    var itemBaseQuantity = """";
                    var landMark = """";
                    var sectorId = """";
                    var selections = '';
                    var addonJSON = [];
                    var selectionJSON = [];
                    
                    address = dt.address;
                    sectorId = dt.sectorId;
                    console.log(""orderItems"", orderItems);
                    orderItems.forEach(function (il) {
                        console.log(""il"", il)
                        itemName = itemName + il.itemName + ""</br>"" + ""</br>"";
                        itemBa");
            WriteLiteral(@"seQuantity = itemBaseQuantity + il.itemBaseQuantity + ""</br>"" + ""</br>"";
                        var addOnlist = il.addOnsList;
                        var addOns = '';
                       

                        var count = 0;
                        if (addOnlist.length > 0) {
                            console.log(""addonlist"",addOnlist);
                            addOnlist.forEach(function (al) {
                                count++;
                               
                                console.log(""foreach"", al);
                                if (al.type == ""addOn"") {
                                    addOns = count < addOnlist.length ? addOns + al.addOnName + "","" : addOns + al.addOnName + ""</br>"" + ""</br>"";
                                    //console.log(""hjwjkafhjwfh"", addOns);
                                    //console.log(""myaddons"", addOns.substring(addOns.indexOf(',')));
                                  /*  addOns.split("","").join(""<br />"");*/
         ");
            WriteLiteral(@"                           /* addOns.replace(/,/g, '<br>');*/
                                }  
                            });
                        }
                        var selections = '';

                        var count = 0;
                        if (addOnlist.length > 0) {
                            console.log(""addonlist"", addOnlist);
                            addOnlist.forEach(function (bl) {
                                count++;

                                console.log(""foreach"", bl);
                                if (bl.type == ""selection"") {

                                    //selections = selections + al.addOnName + "", "";
                                    //selections + ""</br>"";
                                    selections = count < addOnlist.length ? selections + bl.addOnName + "", "" : selections + bl.addOnName + ""</br>"" + ""</br>"" + ""</br>"" ;
                                }
                            });
                        }
            ");
            WriteLiteral(@"           
                        addonJSON.push(addOns);
                        selectionJSON.push(selections);
                        /* ""<hr> </hr>""*/   /* ""<hr class='dashed'>""*/   
                       
                    });
                        $(""#myTable"").append(""<tr>"" +
                            ""<td>"" + dt.orderId + ""</td>"" +
                            ""<td style='display: none'>"" + dt.userId + ""</td>"" +
                            ""<td>"" + dt.userName + ""</td>"" +
                            ""<td>"" + dt.mobileNo + ""</td>"" +
                            ""<td>"" + dt.paymentPaid + ""</td>"" +
                            ""<td>"" + dt.paymentMethod + ""</td>"" +
                            ""<td style='display: none'>"" + dt.paymentStatus + ""</td>"" +
                            ""<td>"" + dt.orderStatus + ""</td>"" +
                            ""<td style='display: none'>"" + dt.deliveryStatus + ""</td>"" +    
                            ""<td>"" + dt.orderDate + ""</td>"" +
               ");
            WriteLiteral(@"             ""<td style='display: none'>"" + dt.villa + ""</td>"" +
                            ""<td>"" + `<a id = ""view"" data-itemName=""${itemName}"" data-quantity=""${itemBaseQuantity}"" data-villa=""${address}""  data-sectorid=""${sectorId}"" data-addons='${JSON.stringify(addonJSON)}' data-selections='${JSON.stringify(selectionJSON)}' onclick= $('#viewmodal').modal('show')><i class=""fa fa-eye  text-secondary text-success""></i></a>
                          ` + ""</td>"")
                    
                });
            }
        });
    });

    //view Menu Items
    $(document).on(""click"", ""#view"", function (e) {
        debugger;
        var itemNames = $(this).data('itemname');
        var quantity = $(this).data('quantity');
        var villa = $(this).data('villa');
        var sectorId = $(this).data('sectorid');
        var addons = $(this).data('addons');
        var selections = $(this).data('selections');
        
       

     /*   var itemBaseQuantity = $(this).closest('tr').find('#");
            WriteLiteral(@"view').data-quantity('innerOrderList.itemBaseQuantity');*/

        $(""#viewmodal .modal-content .myTableview tbody"").html('');
        $(""#viewmodal .modal-content .myTableview tbody"").append(""<td>"" + itemNames + ""</td>"");
        $(""#viewmodal .modal-content .myTableview tbody"").append(""<td>"" + quantity + ""</td>"");
        $(""#viewmodal .modal-content .myTableview tbody"").append(""<td>"" +  selections + ""</td>"");
        $(""#viewmodal .modal-content .myTableview tbody"").append(""<td>"" + addons + ""</td>"");
        $(""#viewmodal .modal-content .myTableview tbody"").append(""<td>"" + villa + ""</td>"");
        $(""#viewmodal .modal-content .myTableview tbody"").append(""<td>"" + sectorId + ""</td>"");
  



       
        //$(""#viewmodal .modal-content .myTableview tbody"").append(""<td>"" + itemBaseQuantity + ""</td>"");
        //$(""#viewmodal .modal-content .myTableview tbody"").append(""<td>"" + ""image"" + ""</td>"");
    });

</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<D2D.WebApp.ViewModel.OrderListVM> Html { get; private set; }
    }
}
#pragma warning restore 1591

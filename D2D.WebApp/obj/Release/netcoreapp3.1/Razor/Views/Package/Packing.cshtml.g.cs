#pragma checksum "D:\Akash D2D code\Akash\D2D\D2D.WebApp\Views\Package\Packing.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4041c09ca7dbef3377d401aa41da6ce25003e0ae"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Package_Packing), @"mvc.1.0.view", @"/Views/Package/Packing.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4041c09ca7dbef3377d401aa41da6ce25003e0ae", @"/Views/Package/Packing.cshtml")]
    public class Views_Package_Packing : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<D2D.WebApp.ViewModel.PackageVM>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/js/jquery.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/js/toastr.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "D:\Akash D2D code\Akash\D2D\D2D.WebApp\Views\Package\Packing.cshtml"
  
    Layout = "~/Pages/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<style>
    .switch {
        position: relative;
        display: inline-block;
        width: 30%;
        height: 34px;
    }

        .switch input {
            display: none;
        }

    .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ca2222;
        -webkit-transition: .4s;
        transition: .4s;
    }

        .slider:before {
            position: absolute;
            content: """";
            height: 26px;
            width: 26px;
            left: 4px;
            bottom: 4px;
            background-color: white;
            -webkit-transition: .4s;
            transition: .4s;
        }

    input:checked + .slider {
        background-color: #2ab934;
    }

    input:focus + .slider {
        box-shadow: 0 0 1px #2196F3;
    }

    input:checked + .slider:before {
        -webkit-transform: translateX(315px);
        -ms-transform: tr");
            WriteLiteral(@"anslateX(315px);
        transform: translateX(315px);
    }

    /*------ ADDED CSS ---------*/
    .on {
        display: none;
    }

    .on, .off {
        color: white;
        position: absolute;
        transform: translate(-50%,-50%);
        top: 50%;
        left: 50%;
        font-size: 15px;
        font-family: Verdana, sans-serif;
    }

    input:checked + .slider .on {
        display: block;
    }

    input:checked + .slider .off {
        display: none;
    }

    /*--------- END --------*/

    /* Rounded sliders */
    .slider.round {
        border-radius: 34px;
    }

        .slider.round:before {
            border-radius: 50%;
        }
        /*-------Switch second-----*/
    .switch {
        position: relative;
        display: inline-block;
        width: 90px;
        height: 34px;
    }

        .switch input {
            display: none;
        }

    .slider {
        position: absolute;
        cursor: pointer;
        to");
            WriteLiteral(@"p: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ca2222;
        -webkit-transition: .4s;
        transition: .4s;
    }

        .slider:before {
            position: absolute;
            content: """";
            height: 26px;
            width: 26px;
            left: 4px;
            bottom: 4px;
            background-color: white;
            -webkit-transition: .4s;
            transition: .4s;
        }

    input:checked + .slider {
        background-color: #2ab934;
    }

    input:focus + .slider {
        box-shadow: 0 0 1px #2196F3;
    }

    input:checked + .slider:before {
        -webkit-transform: translateX(55px);
        -ms-transform: translateX(55px);
        transform: translateX(55px);
    }

    /*------ ADDED CSS ---------*/
    .on {
        display: none;
    }

    .on, .off {
        color: white;
        position: absolute;
        transform: translate(-50%,-50%);
        top: 50%;
        left:");
            WriteLiteral(@" 50%;
        font-size: 10px;
        font-family: Verdana, sans-serif;
    }

    input:checked + .slider .on {
        display: block;
    }

    input:checked + .slider .off {
        display: none;
    }

    /*--------- END --------*/

    /* Rounded sliders */
    .slider.round {
        border-radius: 34px;
    }

        .slider.round:before {
            border-radius: 50%;
        }

</style>
<div class=""ms-content-wrapper"">
    <div class=""row"">
        <div class=""col-md-12"">
            <nav aria-label=""breadcrumb"">
                <ol class=""breadcrumb pl-0"">
                    <li class=""breadcrumb-item""><a href=""#""><i class=""material-icons"">home</i> Home</a></li>
                    <li class=""breadcrumb-item""><a href=""#"">Package</a></li>
                    <li class=""breadcrumb-item active"" aria-current=""page"">Packing Items List</li>
                </ol>
            </nav>

        </div>
        <div class=""col-xl-12 col-md-12"">
            <div clas");
            WriteLiteral(@"s=""ms-panel ms-panel-fh"">
                <div class=""ms-panel-header"">
                    <h6>Need to Pack Items List</h6>
                </div>
                <div class=""ms-panel-body clearfix"">
                    <ul class=""nav nav-tabs d-flex nav-justified mb-4"" role=""tablist"">
                        <li role=""presentation""><a href=""#tab13"" aria-controls=""tab13"" class=""active"" role=""tab"" data-toggle=""tab"">Alacarte Prepared Items</a></li>
                        <li role=""presentation""><a href=""#tab14"" aria-controls=""tab14"" role=""tab"" data-toggle=""tab"">Subcription Prepared Items</a></li>

                    </ul>
                    <div class=""tab-content"">
                        <div role=""tabpanel"" class=""tab-pane active show fade in"" id=""tab13"">
                            <div class=""table-responsive"">
                                <table id=""needToPack"" class=""table table-hover thead-primary"">
                                    <thead>
                                       ");
            WriteLiteral(@" <tr>
                                            <th scope=""col"">Order ID</th>
                                            <th scope=""col"">User ID</th>
                                            <th scope=""col"">Status</th>
                                            <th scope=""col"">Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <div role=""tabpanel"" class=""tab-pane fade"" id=""tab14"">
                            <div class=""table-responsive"">
                                <table id=""needtocooksub"" class=""table table-hover thead-primary"">
                                    <thead>
                                        <tr>
                                            <th scope=""col"" style='display:none'>Subscription ID ");
            WriteLiteral(@"</th>
                                            <th scope=""col"" style='display:none'>User ID </th>
                                            <th scope=""col"">Order ID </th>
                                            <th scope=""col"">Subscription Type</th>
                                            <th scope=""col"">Item Name </th>
                                            <th scope=""col"">Status </th>
                                            <th scope=""col"">Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class=""ms-content-wrapper"">
    <div class=""row"">
        <div class=""col-md-12"">
            <nav aria-label=""breadcrumb"">
");
            WriteLiteral(@"                <ol class=""breadcrumb pl-0"">
                    <li class=""breadcrumb-item""><a href=""#""><i class=""material-icons"">home</i> Home</a></li>
                    <li class=""breadcrumb-item active"" aria-current=""page"">Packed Items List</li>
                </ol>
            </nav>
            <div class=""ms-panel"">
                <div class=""ms-panel-header"">
                    <div class=""d-flex justify-content-between"">
                        <div class=""align-self-center align-left"">
                            <h6>Packed Items List</h6>
                        </div>
                    </div>
                </div>
                <div class=""ms-panel-body"">
                    <div class=""table-responsive"">
                        <table id=""packedItem"" class=""table table-hover thead-primary"">
                            <thead>
                                <tr>
                                    <th scope=""col"">Order ID</th>
                                    <th s");
            WriteLiteral(@"cope=""col"">User ID</th>
                                    <th scope=""col"">User Name</th>

                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- View table Modal -->
<div class=""modal fade"" id=""viewmodal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""notes-modal"">
    <div class=""modal-dialog modal-dialog-centered"" style=""max-width: 80%;"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header bg-secondary"">
                <h5 class=""modal-title has-icon text-white"" id=""NoteModal"">View and Update Items</h5>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <span aria-hidden=""true"">&times;</span>
                </button>
            </div>
            <div c");
            WriteLiteral(@"lass=""ms-panel-body"">
                <div class=""table-responsive"">
                    <table class=""myTableview table table-hover thead-primary"">
                        <thead>
                            <tr>
                                <th scope=""col""> Item Name</th>
                                <th scope=""col""> Item Quantity</th>
                                <th scope=""col"">addOn</th>
                                <th scope=""col"" style=""display:none"">Quantity</th>
                                <th scope=""col"">Selctions</th>
                                <th scope=""col"" style=""display:none"">Quantity</th>

                                <th scope=""col"" style=""display:none"">Order ID</th>
                                <th scope=""col"" style=""display:none"">User ID</th>

                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                    <form class=""needs-val");
            WriteLiteral(@"idation"" novalidate>
                        <div class=""form-row"" style=""display:none"">
                            <div class=""col-md-6 mb-3"">
                                <label for=""validationCustom01"">Order ID</label>
                                <div class=""input-group"">
                                    <input type=""text"" class=""form-control orderID"" value="" "" readonly>
                                    <div class=""invalid-feedback"">
                                        Enter Name!
                                    </div>
                                </div>
                            </div>
                            <div class=""col-md-6 mb-3"">
                                <label for=""validationCustom02"">User ID</label>
                                <div class=""input-group"">
                                    <input type=""number"" class=""form-control userID"" value="" "" readonly>
                                    <div class=""invalid-feedback"">
                  ");
            WriteLiteral("                      Enter Number!\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n");
            WriteLiteral(@"                        <div class=""form-row"">
                            <div class=""col-md-12 mb-3"">
                                <label for=""validationCustom22""><b>Change Status</b></label>
                                <div class=""input-group"">
                                    <label class=""switch"">
                                        <input type=""checkbox"" id=""togBtn"">
                                        <div class=""slider round"">
                                            <!--ADDED HTML -->
                                            <span class=""off"">Prepared</span>
                                            <span class=""on"">Packed</span>
                                            <!--END-->
                                        </div>
                                    </label>
                                </div>
                            </div>
                        </div>
                        <button class=""btn btn-primary"" id=""editpackagestatus"" type");
            WriteLiteral("=\"submit\">Update</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4041c09ca7dbef3377d401aa41da6ce25003e0ae16852", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4041c09ca7dbef3377d401aa41da6ce25003e0ae17892", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

<script>

    //Modal Script
    //$(""#editpackagestatus"").click(function () {
    //    debugger;
    //    $('#editpackagestatusmodal').modal('show');
    //})

     // Need to PackItems
    $(document).ready(function () {
        var APIString = '");
#nullable restore
#line 382 "D:\Akash D2D code\Akash\D2D\D2D.WebApp\Views\Package\Packing.cshtml"
                    Write(Model.Connectionstringallprepareditem);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"';
        debugger;
        $.ajax({
            type: ""GET"",
            contentType: ""application/json"",
            url: APIString,
            data: ""{}"",
            dataType: ""json"",
            success: function (needtopack, status) {
                console.log(""needtopackkkkk"", needtopack)
                debugger;
                var data = needtopack.PreparedOrders;
                $(""#myTableview tbody"").html("" "");
                if (data) {
                    data.forEach(function (dt) {
                        console.log(""dt"", dt)
                        var orderItems = dt.orderDetails;
                        var addOns ;
                    
                        var addOn = '';
                       /* var addOnQuantity = '';*/
                        var selections = '';
                     /*   var selectionsQuantity = '';*/
                        
                        var itemName = """";
                        var itemBaseQuantity = """";
              ");
            WriteLiteral(@"          var itemStatus = """";
                     
                        orderItems.forEach(function (it) {
                            console.log(""it"", it);

                            if ('addOnsList' in it) {
                                var addOnsList = it.addOnsList;
                                addOnsList.forEach(function (al) {
                                    if (al.type == ""addOn"") {
                                        addOn = addOn + al.addOnName + ""</br>"";
                                       /* addOnQuantity = addOnQuantity + al.addOnQuantity + ""</br>"";*/
                                    } else {
                                        selections = selections + al.addOnName + ""</br>"";
                                       /* selectionsQuantity = addOnQuantity + al.addOnQuantity + ""</br>"";*/
                                    }
                                });
                            }


                            //if ('addOnSelection' in it) {");
            WriteLiteral(@"
                            //    var addOnSelection = it.addOnSelection;
                            //    addOnSelection.forEach(function (al) {
                            //        if (al.type == ""addOn"") {
                            //            addOn = addOn + al.addOnName + ""</br>"";
                            //        } else {
                            //            selections = selections + al.addOnName + ""</br>"";
                            //        }
                            //    });
                            //}
                            itemName = itemName + it.itemName + ""</br>"" + ""</br>""
                            itemBaseQuantity = itemBaseQuantity + it.itemBaseQuantity + ""</br>"" + ""</br>""
                             itemStatus =  it.itemStatus;
                        })

                        $(""#needToPack"").append(""<tr>"" +
                                ""<td>"" + dt.orderId + ""</td>"" +
                                ""<td >"" + dt.userId + ""</td>"" +
     ");
            WriteLiteral(@"                           ""<td style ='color: black;  font-size: 18px;  font-weight: bold;'>"" + itemStatus + ""</td>"" +
                            ""<td>"" + `<a class =""view"" id=""view""  data-orderid= ""${dt.orderId}""
                                                                  data-userid= ""${dt.userId}"" 
                                                                  data-itemName=""${itemName}"" 
                                                                  data-quantity=""${itemBaseQuantity}"" 
                                                                  data-addOn=""${addOn}"" 
                                                                
                                                                  data-selections=""${selections}""
                                                                  onclick= $('#viewmodal').modal('show')><i class=""fas fa-box text-secondary text-success""></i></a>
                                  ` + ""</td>"")
                    })
                }");
            WriteLiteral(@"
            },
            error: function (Result) {
                alert(""Error or Error"");
            }
        });
    });

    //view Menu Items
    $(document).on(""click"", "".view"", function (e) {
        debugger;
        var itemNames = $(this).data('itemname');
        var quantity = $(this).data('quantity');
        var addOns = $(this).data('addon');
     /*   var addOnQuantity = $(this).data('addonquantity');*/
        var selections = $(this).data('selections');
        /*var selectionsQuantity = $(this).data('selectionsquantity');*/
        var orderid = $(this).data('orderid');
        var userid = $(this).data('userid');

        $(""#viewmodal .modal-content .myTableview tbody"").html('');
        $(""#viewmodal .modal-content .myTableview tbody"").append(""<td>"" + itemNames + ""</td>"");
        $(""#viewmodal .modal-content .myTableview tbody"").append(""<td>"" + quantity + ""</td>"");
        $(""#viewmodal .modal-content .myTableview tbody"").append(""<td>"" + addOns + ""</td>"");
 ");
            WriteLiteral(@"    /*   $(""#viewmodal .modal-content .myTableview tbody"").append(""<td>"" + addOnQuantity + ""</td>"");*/
        $(""#viewmodal .modal-content .myTableview tbody"").append(""<td>"" + selections + ""</td>"");
    /*    $(""#viewmodal .modal-content .myTableview tbody"").append(""<td>"" + selectionsQuantity + ""</td>"");*/
        $(""#viewmodal .modal-content .myTableview"").append(""<input type='hidden' name='userid' value=""+ userid +"">"");
        $(""#viewmodal .modal-content .myTableview"").append(""<input type='hidden' name='orderid' value=""+ orderid +"">"");

     });

    $('#editpackagestatus').on('click', function (e) {
        e.preventDefault();
        debugger;
        var orderID = $(""input[name=orderid]"").val();
        var userID = $(""input[name=userid]"").val();
        var packAgeStatus = $(""#viewmodal form #togBtn"").is(':checked') ? ""Packed"" : """";
        var APIString = '");
#nullable restore
#line 494 "D:\Akash D2D code\Akash\D2D\D2D.WebApp\Views\Package\Packing.cshtml"
                    Write(Model.Connectionstringpackagestatus);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"';
        $.ajax({

            type: 'POST',
            url: APIString,
            data: JSON.stringify({
                orderId: orderID,
                userId: userID,
                /*status: packAgeStatus.trim()*/
            }),
            dataType: 'json',
            contentType: 'application/json',
            success: function (data) {
                debugger;
                if (data.status) {
                    toastr.success(data.message);
                      window.setTimeout(function () {
                            window.location.href='");
#nullable restore
#line 511 "D:\Akash D2D code\Akash\D2D\D2D.WebApp\Views\Package\Packing.cshtml"
                                             Write(Url.Action("Packing", "Package"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"'
                        }, 1000);

                } else {
                    toastr.error(data.message);
                }

            },
            error: function (ajaxContext) {

                alert("" its Fail"");
            }
        });
    });

    //-------------------------------------------------------------Subscription Part-------------------------------------------------------------

       // Need to PackItems
    $(document).ready(function () {
        var APIString = '");
#nullable restore
#line 530 "D:\Akash D2D code\Akash\D2D\D2D.WebApp\Views\Package\Packing.cshtml"
                    Write(Model.Connectionstringsubscriptionprepareditems);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"';
        debugger;
        $.ajax({
            type: ""GET"",
            contentType: ""application/json"",
            url: APIString,
            data: ""{}"",
            dataType: ""json"",
            success: function (needtopacksub, status) {
                console.log(""needtopacksubscription"", needtopacksub)
                debugger;
                if ('orderList' in needtopacksub) {
                    var data = needtopacksub.orderList;
                    data.forEach(function (dt) {
                        console.log(""dtsub"", dt)

                        $(""#needtocooksub"").append(""<tr>"" +
                            ""<td style = 'display:none'>"" + dt.subscriptionId + ""</td>"" +
                            ""<td style = 'display:none'>"" + dt.userId + ""</td>"" +
                            ""<td>"" + dt.orderId + ""</td>"" +
                            ""<td>"" + dt.subscriptionTitle + ""</td>"" +
                            ""<td >"" + dt.meal + ""</td>"" +
                            ""<td s");
            WriteLiteral(@"tyle ='color: black;  font-size: 18px;  font-weight: bold;'>"" + dt.itemStatus + ""</td>"" +
                            ""<td>"" + `<label class=""switch"" ><input type=""checkbox"" class=""togBtnSub"" data-subscriptionid= ""${dt.subscriptionId}"" data-userid=""${dt.userId}"" data-orderid=""${dt.orderId}""><div class=""slider round""><!--ADDED HTML --><span class=""on"">Packed</span><span class=""off"">NOT</span><!--END--></div></label>` + ""</td>"")

                    })
                }

              /*  }*/
            },
            error: function (Result) {
                alert(""Error of Subscription"");
            }
        });
    });

    //to send data to view
    //$(document).on(""click"", ""#viewsub"", function (e) {
    //    debugger;
    //    var id = $(this).closest('tr').attr('id');
    //    var currentRow = $(this).closest(""tr"");
    //    var subscriptionID = currentRow.find(""td:eq(0)"").text();

    //    $(""#viewmodalsubscription .modal-content .subscriptionID"").val(subscriptionID);
    ");
            WriteLiteral(@"//});



    //toggle Switch alar
    var switchStatus = false;
    $(""#togBtn"").on('change', function () {
        if ($(this).is(':checked')) {
            switchStatus = $(this).is(':checked');
            alert(""Are You Sure Food Got Packed?"");// To verify
        }
        //else {
        //    switchStatus = $(this).is(':checked');
        //    alert(switchStatus);// To verify
        //}
    });

    //toggle Switch
    var switchStatus = false;
    $(document).on('change','.togBtnSub', function (e) {
        if ($(this).is(':checked')) {
            switchStatus = $(this).is(':checked');
            alert(""Are You Sure Subscription Food Got Packed?"");// To verify
        }
        e.preventDefault();
        debugger;
        var subscriptionIDint = $(this).data('subscriptionid');
        var subscriptionID = subscriptionIDint.toString();
        var orderIDint = $(this).data('orderid');
        var orderID = orderIDint.toString();
        var userIDint = $(this).data('");
            WriteLiteral("userid\');\r\n        var userID = userIDint.toString();\r\n        var packAgeStatus = $(this).is(\':checked\') ? \"Packed\" : \"\";\r\n        var APIString = \'");
#nullable restore
#line 607 "D:\Akash D2D code\Akash\D2D\D2D.WebApp\Views\Package\Packing.cshtml"
                    Write(Model.Connectionstringsubscriptionpackagestatus);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"';
        $.ajax({
            type: 'POST',
            url: APIString,
            data: JSON.stringify({
                subscriptionId: subscriptionID,
                orderId: orderID,
                userId: userID,
                itemStatus: packAgeStatus
            }),
            dataType: 'json',
            contentType: 'application/json',
            success: function (data) {
                debugger;
                if (data.status) {
                    toastr.success(data.message);
                      window.setTimeout(function () {
                            window.location.href='");
#nullable restore
#line 624 "D:\Akash D2D code\Akash\D2D\D2D.WebApp\Views\Package\Packing.cshtml"
                                             Write(Url.Action("Packing", "Package"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"'
                        }, 1000);

                } else {
                    toastr.error(data.message);
                }

            },
            error: function (ajaxContext) {

                alert("" its Fail"");
            }
        });

    });

      //------------------------------------------------Display All Packed Items-------------------------------------------------------------


     $(document).ready(function () {
        var APIString = '");
#nullable restore
#line 644 "D:\Akash D2D code\Akash\D2D\D2D.WebApp\Views\Package\Packing.cshtml"
                    Write(Model.Connectionstringfetchallpackedorders);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"';
        debugger;
        $.ajax({
            type: ""GET"",
            contentType: ""application/json"",
            url: APIString,
            data: ""{}"",
            dataType: ""json"",
            success: function (data, status) {
                console.log(""completePackedItems"", data)
                var subscriptionOrders = data.subscriptionOrders;
                var cartOrders = data.allACartOrders;
                var orderList;
                if ('subscriptionOrders' in data  && 'allACartOrders' in data) {
                    orderList = subscriptionOrders.packedOrderList.concat(cartOrders.AllACartOrder);
                } else if ('subscriptionOrders' in data) {
                    orderList = subscriptionOrders.packedOrderList;
                } else if ('allACartOrders' in data) {
                    orderList = cartOrders.AllACartOrder;
                }
                orderList.forEach(function (dt) {
                    console.log(""dtsub"", dt)
                    $(");
            WriteLiteral(@"""#packedItem"").append(""<tr>"" +
                        ""<td>"" + dt.orderId + ""</td>"" +
                        ""<td>"" + dt.userId + ""</td>"" +
                        ""<td>"" + dt.userName + ""</td>""  )
                })                
            },
            error: function (Result) {
                alert(""Error or Error"");
            }
        });
    });


</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<D2D.WebApp.ViewModel.PackageVM> Html { get; private set; }
    }
}
#pragma warning restore 1591
